[MAIN]
device = pc
log_path = /logs

[CONSTANTS]
controllerRudderDeadZoneDegs = 4
reached_waypoint_distance = 3

[MOVEMENT]
disable_tacking = 1
no_go_angle = 60

[SAIL]
max_angle = 90
min_angle = 0
default_angle = 0

[RUDDER]
max_angle = 45
min_angle = -45
default_angle = 0
# How many degrees off the boat is allowed to be from the targeted boat angle
acceptable_error = 2
# Rudder will move X degrees for every degree difference between the current and target boat angle
# Higher -> faster turning but chance of angle overshooting
smooth_const = 3

[ODRIVE]
# Switch if rudder and sail motors are different on odrive pcb
m0 = rudder
m1 = sail
odriveEncoderCPR = 8192
odrivepolepairs = 7
motorKV = 280
odrivecurrentlimit = 40
odrivebreakresistor = .5
currentLimit = 40

[ODRIVE_SAIL]
posGain = 65
velGain = 5
velLimit = 1
velIntegratorGain = 15
# Angles from 0 to 90 are converted to -2.3 to 2.3
max_rotations = 2.3

[ODRIVE_RUDDER]
posGain = 65
velGain = 4.125
velLimit = 0.5
velIntegratorGain = 20
max_rotations = 0.5

[TRANSCEIVER]
baudrate = 115200
ardu_port = /dev/ttyACM0
ardu_port2 = /dev/ttyACM1
ardu_port3 = /dev/ttyACM2

[WINDVANE]
no_go_range = 45

[CAMERA]
source = 0
resolution_width = 640
resolution_height = 640

[CAMERASERVOS]
# Yaw and Pitch assumed to have same range limits
max_angle = 180
min_angle = 0
default_angle = 90

# Servo connection ports, if inputs are reversed then switch
# If servos don't move try setting ports to 2 and 3
pitch_port = 0
yaw_port = 1


[OBJECTDETECTION]
weights = /data/CV/buoy_weights.pt
conf_thresh = 0.6

# Used to estimate GPS from a detection
# Take a picture of a buoy at a measured distance using the sailbot camera
# Then enter the distance (m) and width (px) of the buoy
distance_from_buoy = 5
apparent_buoy_width_px = 50
real_buoy_width = 0.25

center_acceptance = 0.8
SCAN_minor_thresh = 0.85
SCAN_major_steps = 3


[SEARCH]
# The furthest distance that the boat can reliably detect a buoy (in meters)
# Used to auto generate a search path
# UNTESTED!
max_detection_distance = 20

# Buoys detected X meters outside of the search radius will be ignored
search_radius_tolerance = 8

# GPS points within X meters will be pooled together
heatmap_chunk_radius = 5
# The required confidence level for the boat to switch from searching to moving towards a buoy
# Most detections are between 0.7-0.95 so a threshold of 3 would require 4 detections before the boat diverts course
# Setting to 0 means the boat will move towards the first detection it sees
# Raise or lower to change boat's 'move to a detection' sensitivity
heatmap_pooled_confidence_threshold = 1.8
# If the boat is tracking a buoy and can't detect it for X sequential captures then abandon and blacklist that GPS point
# Set to -1 to disable abandoning target
tracking_abandon_threshold = -1

# Distance in meters for the boat to detect collisions with the buoy
ramming_distance = 2
# If the distance to the buoy is less than this then signal and end the event
collision_sensitivity = 0.3

[ENDURANCE]
# How much extra space (in meters) to round the buoy without hitting it
rounding_buffer = 4
